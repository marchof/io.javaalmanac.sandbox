name: CD

on:
  push:
    branches:
      - master
  schedule:
    - cron: '0 0 * * *'

jobs:
  sandbox-jar:

    runs-on: ubuntu-latest

    name: Sandbox JAR

    steps:
    - uses: actions/checkout@v1
    - name: Setup JDK 8
      uses: actions/setup-java@v1
      with:
        java-version: 8
    - name: Build with Maven
      run: mvn -B package  -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn
    - name: Upload JAR
      uses: actions/upload-artifact@v1
      with:
        name: sandbox.jar
        path: target/sandbox.jar

  image:

    needs: sandbox-jar
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        jdk:
          - version: 8
            image: adoptopenjdk/openjdk8:alpine-slim
            vmargs: ''
          - version: 9
            image: adoptopenjdk/openjdk9:alpine
            vmargs: '--add-opens java.base/java.util=ALL-UNNAMED'
          - version: 10
            image: adoptopenjdk/openjdk10:alpine-slim
            vmargs: '--add-opens java.base/java.util=ALL-UNNAMED'
          - version: 11
            image: eclipse-temurin:11-alpine
            vmargs: '--add-opens java.base/java.util=ALL-UNNAMED'
          - version: 12
            image: adoptopenjdk/openjdk12:alpine-slim
            vmargs: '--add-opens java.base/java.util=ALL-UNNAMED'
          - version: 13
            image: adoptopenjdk/openjdk13:alpine-slim
            vmargs: '--add-opens java.base/java.util=ALL-UNNAMED'
          - version: 14
            image: adoptopenjdk/openjdk14:alpine-slim
            vmargs: '--add-opens java.base/java.util=ALL-UNNAMED'
          - version: 15
            image: adoptopenjdk/openjdk15:alpine-slim
            vmargs: '--add-opens java.base/java.util=ALL-UNNAMED'
          - version: 16
            image: eclipse-temurin:16-alpine
            vmargs: '--add-opens java.base/java.util=ALL-UNNAMED'
          - version: 17
            image: eclipse-temurin:17-alpine
            vmargs: '--add-opens java.base/java.util=ALL-UNNAMED'
          - version: 18
            image: eclipse-temurin:18-alpine
            vmargs: '--add-opens java.base/java.util=ALL-UNNAMED'
          - version: 19
            image: openjdk:19-slim
            vmargs: '--add-opens java.base/java.util=ALL-UNNAMED'

    name: Java ${{ matrix.jdk.version }} Image (${{ matrix.jdk.image }})

    env:
      ECR_REPOSITORY: javaalmanac/sandbox
      LATEST_TAG: lambda-latest-${{ matrix.jdk.version }}
    
    steps:
    - uses: actions/checkout@v1
    - name: Download JAR
      uses: actions/download-artifact@v1
      with:
        name: sandbox.jar
        path: docker
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      run: |
        docker build --build-arg JDK_IMAGE=${{ matrix.jdk.image }} --build-arg "VMARGS=${{ matrix.jdk.vmargs }}" -t sandbox docker
        docker tag sandbox $ECR_REGISTRY/$ECR_REPOSITORY:$LATEST_TAG
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$LATEST_TAG
    - name: Update Lambda
      uses: appleboy/lambda-action@1e05c1377056f21ebb2ce69b910bc16b943c2a66
      with:
        aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws_region: ${{ secrets.AWS_REGION }}
        function_name: jdk-sandbox-${{ matrix.jdk.version }}
        image_uri: ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ env.LATEST_TAG }}
    - name: Logout of Amazon ECR
      if: always()
      run: docker logout ${{ steps.login-ecr.outputs.registry }}
